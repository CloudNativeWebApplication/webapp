name: Build AMI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install

      - name: Test MySQL Connection
        run: |
          mysql -h 127.0.0.1 -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} -D ${{ secrets.MYSQL_DATABASE }} -e "SHOW DATABASES;"

      - name: Run Integration Tests in the Background
        run: npx mocha tests/healthz.test.js &

      - name: Create Zip File
        run: |
          rm -r node_modules
          zip -r mycode.zip .

      - name: Upload Zip File
        uses: actions/upload-artifact@v2
        with:
          name: codezip
          path: mycode.zip

      - name: Install Packer plugin
        run: packer plugins install github.com/hashicorp/amazon

      - name: Run Packer
        run: |
          # Install Packer
          curl -fsSL https://releases.hashicorp.com/packer/1.7.3/packer_1.7.3_linux_amd64.zip -o packer.zip
          unzip packer.zip
          sudo mv packer /usr/local/bin/
          packer init debian12-ami.pkr.hcl

          # Run Packer build and capture the output
          OUTPUT=$(packer build -var "demo_account_id=${{ secrets.DEMO_ACCOUNT_ID }}" \
                                -var "source_ami=${{ secrets.SOURCE_AMI }}" \
                                -var "aws_region=${{ secrets.AWS_REGION }}" \
                                -var "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
                                -var "aws_access_key=${{ secrets.AWS_ACCESS_KEY }}" \
                                debian12-ami.pkr.hcl)
          echo "$OUTPUT"
      
          # Extract the AMI ID from the output
          AMI_ID=$(echo "$OUTPUT" | grep 'AMI ID' | cut -d' ' -f3)  # Adjust this line based on your actual Packer output format
          echo "AMI_ID=$AMI_ID" >> $GITHUB_ENV

      - name: Update Launch Template with Demo Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEMO_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEMO_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        run: |
          # Assuming $AMI_ID contains the new AMI ID
          aws ec2 create-launch-template-version --launch-template-id <template_id> --source-version <version> --launch-template-data "{\"ImageId\":\"$AMI_ID\"}"

      - name: Trigger Instance Refresh with Demo Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEMO_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEMO_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws autoscaling start-instance-refresh --auto-scaling-group-name <group_name> --strategy <strategy>

      - name: Wait for Instance Refresh Completion with Demo Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEMO_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEMO_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        run: |
          # Loop to check the status of instance refresh
          while : ; do
            STATUS=$(aws autoscaling describe-instance-refreshes --auto-scaling-group-name <group_name> --query 'InstanceRefreshes[0].Status' --output text)
            if [ "$STATUS" == "Successful" ]; then
              echo "Instance refresh completed successfully."
              break
            elif [ "$STATUS" == "Failed" ]; then
              echo "Instance refresh failed."
              exit 1
            else
              echo "Waiting for instance refresh to complete..."
              sleep 60
            fi
          done
